package hari;
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.util.ArrayList;
import java.util.HashMap;

public class EcommercePlatform extends JFrame {
    private static HashMap<String, String> users = new HashMap<>();
    private static ArrayList<Product> products = new ArrayList<>();
    private static HashMap<String, ShoppingCart> carts = new HashMap<>();

    static class Product {
        private int id;
        private String name;
        private double price;
        private String category;

        public Product(int id, String name, double price, String category) {
            this.id = id;
            this.name = name;
            this.price = price;
            this.category = category;
        }

        public int getId() {
            return id;
        }

        public String getName() {
            return name;
        }

        public double getPrice() {
            return price;
        }

        public String getCategory() {
            return category;
        }

        @Override
        public String toString() {
            return name + " ($" + price + ")";
        }
    }

    static class ShoppingCart {
        private ArrayList<Product> cartItems = new ArrayList<>();

        public void addProduct(Product product) {
            cartItems.add(product);
        }

        public ArrayList<Product> getCartItems() {
            return cartItems;
        }

        public double getTotalPrice() {
            return cartItems.stream().mapToDouble(Product::getPrice).sum();
        }

        public void clearCart() {
            cartItems.clear();
        }
    }

    public EcommercePlatform() {
        setTitle("E-commerce Platform");
        setSize(300, 200);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        initLoginForm();
    }

    private void initLoginForm() {
        JPanel panel = new JPanel(new GridLayout(3, 2, 10, 10));

        JLabel userLabel = new JLabel("Username:");
        JTextField userField = new JTextField();
        JLabel passLabel = new JLabel("Password:");
        JPasswordField passField = new JPasswordField();

        JButton loginButton = new JButton("Login");
        JButton registerButton = new JButton("Register");

        panel.add(userLabel);
        panel.add(userField);
        panel.add(passLabel);
        panel.add(passField);
        panel.add(loginButton);
        panel.add(registerButton);

        add(panel);

        loginButton.addActionListener(e -> {
            String username = userField.getText();
            String password = new String(passField.getPassword());
            if (users.containsKey(username) && users.get(username).equals(password)) {
                if ("admin".equals(username)) {
                    new AdminPanel(username).setVisible(true);
                } else {
                    new UserPanel(username).setVisible(true);
                }
                dispose();
            } else {
                JOptionPane.showMessageDialog(this, "Invalid credentials!");
            }
        });

        registerButton.addActionListener(e -> {
            new RegistrationForm().setVisible(true);
            dispose();
        });
    }

    class RegistrationForm extends JFrame {
        public RegistrationForm() {
            setTitle("Register");
            setSize(300, 200);
            setDefaultCloseOperation(EXIT_ON_CLOSE);

            JPanel panel = new JPanel(new GridLayout(3, 2, 10, 10));
            JLabel userLabel = new JLabel("Username:");
            JTextField userField = new JTextField();
            JLabel passLabel = new JLabel("Password:");
            JPasswordField passField = new JPasswordField();
            JButton registerButton = new JButton("Register");

            panel.add(userLabel);
            panel.add(userField);
            panel.add(passLabel);
            panel.add(passField);
            panel.add(registerButton);

            add(panel);

            registerButton.addActionListener(e -> {
                String username = userField.getText();
                String password = new String(passField.getPassword());
                if (users.containsKey(username)) {
                    JOptionPane.showMessageDialog(this, "Username already exists!");
                } else {
                    users.put(username, password);
                    JOptionPane.showMessageDialog(this, "Registration successful!");
                    new EcommercePlatform().setVisible(true);
                    dispose();
                }
            });
        }
    }

    class AdminPanel extends JFrame {
        public AdminPanel(String username) {
            setTitle("Admin Panel");
            setSize(400, 300);
            setDefaultCloseOperation(EXIT_ON_CLOSE);

            DefaultListModel<Product> productListModel = new DefaultListModel<>();
            products.forEach(productListModel::addElement);

            JList<Product> productList = new JList<>(productListModel);
            JButton addButton = new JButton("Add Product");
            JButton deleteButton = new JButton("Delete Product");
            JButton logoutButton = new JButton("Logout");

            addButton.addActionListener(e -> {
                String name = JOptionPane.showInputDialog("Enter product name:");
                double price = Double.parseDouble(JOptionPane.showInputDialog("Enter price:"));
                String category = JOptionPane.showInputDialog("Enter category:");
                Product product = new Product(products.size() + 1, name, price, category);
                products.add(product);
                productListModel.addElement(product);
            });

            deleteButton.addActionListener(e -> {
                Product selected = productList.getSelectedValue();
                if (selected != null) {
                    products.remove(selected);
                    productListModel.removeElement(selected);
                }
            });

            logoutButton.addActionListener(e -> {
                new EcommercePlatform().setVisible(true);
                dispose();
            });

            JPanel panel = new JPanel();
            panel.add(new JScrollPane(productList));
            panel.add(addButton);
            panel.add(deleteButton);
            panel.add(logoutButton);

            add(panel);
        }
    }

    class UserPanel extends JFrame {
        public UserPanel(String username) {
            setTitle("Shopping - " + username);
            setSize(400, 300);
            setDefaultCloseOperation(EXIT_ON_CLOSE);

            DefaultListModel<Product> productListModel = new DefaultListModel<>();
            products.forEach(productListModel::addElement);

            JList<Product> productList = new JList<>(productListModel);
            JButton addToCartButton = new JButton("Add to Cart");
            JButton checkoutButton = new JButton("Checkout");
            JButton logoutButton = new JButton("Logout");

            ShoppingCart cart = carts.computeIfAbsent(username, k -> new ShoppingCart());

            addToCartButton.addActionListener(e -> {
                Product selected = productList.getSelectedValue();
                if (selected != null) {
                    cart.addProduct(selected);
                    JOptionPane.showMessageDialog(this, "Added to cart!");
                }
            });

            checkoutButton.addActionListener(e -> {
                StringBuilder receipt = new StringBuilder("Receipt:\n");
                for (Product p : cart.getCartItems()) {
                    receipt.append(p.toString()).append("\n");
                }
                receipt.append("Total: $").append(cart.getTotalPrice());
                JOptionPane.showMessageDialog(this, receipt.toString());
                cart.clearCart();
            });

            logoutButton.addActionListener(e -> {
                new EcommercePlatform().setVisible(true);
                dispose();
            });

            JPanel panel = new JPanel();
            panel.add(new JScrollPane(productList));
            panel.add(addToCartButton);
            panel.add(checkoutButton);
            panel.add(logoutButton);

            add(panel);
        }
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> {
            products.add(new Product(1, "Laptop", 800.00, "Electronics"));
            products.add(new Product(2, "Smartphone", 500.00, "Electronics"));
            products.add(new Product(3, "Headphones", 100.00, "Electronics"));
            products.add(new Product(4, "Smartwatch", 200.00, "Electronics"));
            products.add(new Product(5, "Foundation", 30.00, "Makeup"));
            products.add(new Product(6, "Lipstick", 20.00, "Makeup"));
            products.add(new Product(7, "Mascara", 15.00, "Makeup"));
            products.add(new Product(8, "Eyeshadow Palette", 40.00, "Makeup"));

            users.put("admin", "admin");

            new EcommercePlatform().setVisible(true);
        });
    }
}
